name: clone-load-clone
description: |
  This is a kind of bootstrapping action. Environment variables do not
  transfer between top-level workflows and child workflows. We have to
  pass them another way. We could use inputs and outputs, but that would
  proliferate lots of boilerplate.

  We use a scheme where the top-level workflows store environment variables
  in files, and child workflows download those files and re-hydrate the
  environment in their context. There are two variables that are especially
  tricky, though. We allow users to specify their own repo and ref for where
  to get the `shared-actions` repo. That info is in the shared file, but we
  have to clone a `shared-actions` repo to use its script to load the variables.
  As a result, we clone the code twice: first to learn how to load the variables,
  then another time when the variables are actually set.

runs:
  using: 'composite'
  steps:
    - name: Clone shared-actions repo
      uses: actions/checkout@v4
      with:
        repository: 'rapidsai/shared-actions'
        ref: 'main'
        path: ./shared-actions
    - name: Load base env vars
      uses: ./shared-actions/telemetry-impls/load-base-env-vars
    - name: Clone shared-actions repo again, this time with loaded env vars
      uses: actions/checkout@v4
      with:
        repository: ${{ env.SHARED_ACTIONS_REPO || 'rapidsai/shared-actions' }}
        ref: ${{ env.SHARED_ACTIONS_REF || 'main' }}
        path: ./shared-actions
